{"version":3,"sources":["Components/ContactListItem.js","Components/styles.js","Components/ContactList.js","Components/Filter.js","Components/ContactForm.js","App.js","index.js"],"names":["ContactListItem","id","name","number","onClickRemove","type","onClick","StyledForm","styled","form","StyledList","ul","ContactList","contacts","filter","map","contact","includes","Filter","placeholder","onChange","Form","state","onHandleChange","e","target","value","setState","uuidv4","onHandleSubmit","preventDefault","refs","document","getElementById","tel","props","addContact","action","onSubmit","this","htmlFor","pattern","title","required","Component","App","some","item","alert","prev","handleFilter","i","prevProps","prevState","console","log","localStorage","setItem","JSON","stringify","getItem","parsedContacts","parse","ContactForm","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.22abf694.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\nconst ContactListItem = ({ id, name, number, onClickRemove }) => (\r\n  <li>\r\n    {name}: {number}\r\n    <button type=\"button\" id={id} onClick={onClickRemove}>\r\n      delete\r\n    </button>\r\n  </li>\r\n);\r\n\r\nContactListItem.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onClickRemove: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactListItem;\r\n","import styled from 'styled-components';\r\n\r\nconst StyledForm = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n\r\n  & button {\r\n    height: 35px;\r\n    background-color: white;\r\n    outline: none;\r\n    border-radius: 3px;\r\n  }\r\n\r\n  & button:hover {\r\n    color: white;\r\n    background-color: black;\r\n    transition: 250ms;\r\n  }\r\n\r\n  & button:active {\r\n    background-color: blue;\r\n  }\r\n  & input {\r\n    margin-bottom: 30px;\r\n    border-radius: 3px;\r\n  }\r\n`;\r\n\r\nconst StyledList = styled.ul`\r\n  list-style: none;\r\n\r\n  & li {\r\n    margin-bottom: 20px;\r\n  }\r\n\r\n  & li button {\r\n    height: 25px;\r\n    background-color: white;\r\n    outline: none;\r\n    border-radius: 3px;\r\n    margin-left: 30px;\r\n  }\r\n\r\n  & li button:hover {\r\n    color: white;\r\n    background-color: black;\r\n    transition: 250ms;\r\n  }\r\n\r\n  & li button:active {\r\n    background-color: blue;\r\n  }\r\n`;\r\n\r\nexport { StyledForm, StyledList };\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport ContactListItem from './ContactListItem';\r\nimport { StyledList } from './styles';\r\n\r\nconst ContactList = ({ contacts, filter, onClickRemove }) => {\r\n  const renderItems = () => {\r\n    if (filter) {\r\n      return contacts.map(\r\n        contact =>\r\n          contact.name.includes(filter) && (\r\n            <ContactListItem\r\n              onClickRemove={onClickRemove}\r\n              key={contact.id}\r\n              id={contact.id}\r\n              name={contact.name}\r\n              number={contact.number}\r\n              contacts={contacts}\r\n            />\r\n          ),\r\n      );\r\n    } else {\r\n      return contacts.map(contact => (\r\n        <ContactListItem\r\n          onClickRemove={onClickRemove}\r\n          key={contact.id}\r\n          id={contact.id}\r\n          name={contact.name}\r\n          number={contact.number}\r\n          contacts={contacts}\r\n        />\r\n      ));\r\n    }\r\n  };\r\n\r\n  return <StyledList>{renderItems()}</StyledList>;\r\n};\r\n\r\nContactList.propTypes = {\r\n  filter: PropTypes.string.isRequired,\r\n  onClickRemove: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import React from 'react';\r\n\r\nconst Filter = ({ filter }) => {\r\n  return (\r\n    <input type=\"text\" placeholder=\"Find contact by name\" onChange={filter} />\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import React, { Component } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { StyledForm } from './styles';\r\nimport PropTypes from 'prop-types'; // ES6\r\nclass Form extends Component {\r\n  static propTypes = {\r\n    addContact: PropTypes.func.isRequired,\r\n  };\r\n\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n    id: '',\r\n  };\r\n\r\n  onHandleChange = e => {\r\n    const { value, name } = e.target;\r\n    this.setState({ [name]: value, id: uuidv4() });\r\n  };\r\n\r\n  onHandleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const refs = {\r\n      name: document.getElementById('name-input'),\r\n      tel: document.getElementById('tel-input'),\r\n    };\r\n\r\n    this.props.addContact(this.state);\r\n\r\n    refs.name.value = '';\r\n    refs.tel.value = '';\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <StyledForm action=\"submit\" onSubmit={this.onHandleSubmit}>\r\n        <label htmlFor=\"name\">\r\n          <strong>Name:</strong>\r\n          <input\r\n            id=\"name-input\"\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            placeholder=\"text only\"\r\n            onChange={this.onHandleChange}\r\n            required\r\n          />\r\n        </label>\r\n        <label htmlFor=\"number\">\r\n          <strong>Number:</strong>\r\n          <input\r\n            id=\"tel-input\"\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"^[ 0-9]+$\"\r\n            onChange={this.onHandleChange}\r\n            placeholder=\"numbers only\"\r\n            required\r\n          />\r\n        </label>\r\n        <button type=\"submit\">Add contact</button>\r\n      </StyledForm>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","import React, { Component } from 'react';\nimport ContactList from './Components/ContactList';\nimport Filter from './Components/Filter';\nimport ContactForm from './Components/ContactForm';\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  addContact = contact => {\n    const doesExists = this.state.contacts.some(\n      item => item.name === contact.name,\n    );\n\n    doesExists\n      ? alert(`${contact.name} is already in contacts.`)\n      : this.setState(prev => ({\n          contacts: [...prev.contacts, contact],\n        }));\n  };\n\n  handleFilter = e => {\n    const { value } = e.target;\n    this.setState({ filter: value });\n  };\n\n  onClickRemove = e => {\n    e.preventDefault();\n    this.setState(prev => ({\n      contacts: [...prev.contacts.filter(i => i.id !== e.target.id)],\n    }));\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      console.log('updated');\n      localStorage.setItem('Contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('Contacts');\n    const parsedContacts = JSON.parse(contacts);\n\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <ContactForm addContact={this.addContact} />\n        <h2>Contacts</h2>\n        <Filter filter={this.handleFilter} />\n        <ContactList\n          contacts={this.state.contacts}\n          filter={this.state.filter}\n          onClickRemove={this.onClickRemove}\n        />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}